{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.14.0",
    "schemaVersion": 1004,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      }
    }
  },
  "kind": "Package",
  "canonicalReference": "@dcl/posix!",
  "docComment": "",
  "name": "@dcl/posix",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@dcl/posix!",
      "name": "",
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!ComponentID:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ComponentID = "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "releaseTag": "Public",
          "name": "ComponentID",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!DecentralandInterface:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type DecentralandInterface = "
            },
            {
              "kind": "Content",
              "text": "{\n  DEBUG: boolean\n\n  updateEntity?: never\n\n  log(...a: any[]): void\n\n  error(message: string | "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ", data?: any): void\n\n  openExternalUrl(url: string): void\n\n  openNFTDialog(assetContractAddress: string, tokenId: string, comment: string | null): void\n\n  // LIFECYCLE\n\n  onUpdate(cb: (deltaTime: number) => void): void\n\n  onStart(cb: "
            },
            {
              "kind": "Reference",
              "text": "Function",
              "canonicalReference": "!Function:interface"
            },
            {
              "kind": "Content",
              "text": "): void\n\n  // ENTITIES\n\n  addEntity(entityId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": "): void\n\n  removeEntity(entityId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": "): void\n\n  updateEntityComponent(entityId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": ", componentName: string, classId: number, json: string): void\n\n  attachEntityComponent(entityId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": ", componentName: string, componentId: "
            },
            {
              "kind": "Reference",
              "text": "ComponentID",
              "canonicalReference": "@dcl/posix!ComponentID:type"
            },
            {
              "kind": "Content",
              "text": "): void\n\n  removeEntityComponent(entityId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": ", componentName: string): void\n\n  setParent(entityId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": ", parentId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": "): void\n\n  // QUERY\n\n  query(queryType: string, payload: any): void\n\n  // COMPONENTS\n\n  componentCreated(componentId: "
            },
            {
              "kind": "Reference",
              "text": "ComponentID",
              "canonicalReference": "@dcl/posix!ComponentID:type"
            },
            {
              "kind": "Content",
              "text": ", componentName: string, classId: number): void\n\n  componentDisposed(componentId: "
            },
            {
              "kind": "Reference",
              "text": "ComponentID",
              "canonicalReference": "@dcl/posix!ComponentID:type"
            },
            {
              "kind": "Content",
              "text": "): void\n\n  componentUpdated(componentId: "
            },
            {
              "kind": "Reference",
              "text": "ComponentID",
              "canonicalReference": "@dcl/posix!ComponentID:type"
            },
            {
              "kind": "Content",
              "text": ", json: string): void\n\n  // EVENTS\n\n  onEvent(cb: (event: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EngineEvent",
              "canonicalReference": "@dcl/posix!EngineEvent:type"
            },
            {
              "kind": "Content",
              "text": ">) => void): void\n\n  subscribe(eventName: "
            },
            {
              "kind": "Reference",
              "text": "IEventNames",
              "canonicalReference": "@dcl/posix!IEventNames:type"
            },
            {
              "kind": "Content",
              "text": "): void\n\n  unsubscribe(eventName: "
            },
            {
              "kind": "Reference",
              "text": "IEventNames",
              "canonicalReference": "@dcl/posix!IEventNames:type"
            },
            {
              "kind": "Content",
              "text": "): void\n\n  // MODULES\n\n  loadModule(moduleName: string, exportsRef: any): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ModuleDescriptor",
              "canonicalReference": "@dcl/posix!ModuleDescriptor:type"
            },
            {
              "kind": "Content",
              "text": ">\n\n  callRpc(rpcHandle: string, methodName: string, args: "
            },
            {
              "kind": "Reference",
              "text": "ArrayLike",
              "canonicalReference": "!ArrayLike:interface"
            },
            {
              "kind": "Content",
              "text": "<any>): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<any>\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "DecentralandInterface",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 44
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!EngineEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type EngineEvent<T extends "
            },
            {
              "kind": "Reference",
              "text": "IEventNames",
              "canonicalReference": "@dcl/posix!IEventNames:type"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "IEventNames",
              "canonicalReference": "@dcl/posix!IEventNames:type"
            },
            {
              "kind": "Content",
              "text": ", V = "
            },
            {
              "kind": "Reference",
              "text": "IEvents",
              "canonicalReference": "@dcl/posix!IEvents:interface"
            },
            {
              "kind": "Content",
              "text": "[T]"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n  type: T\n  data: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<V>\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "EngineEvent",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 9,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!EntityID:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type EntityID = "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "releaseTag": "Public",
          "name": "EntityID",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!GizmoDragEndEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GizmoDragEndEvent = "
            },
            {
              "kind": "Content",
              "text": "{\n  type: \"gizmoDragEnded\"\n  transforms: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    position: "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyVector3",
              "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
            },
            {
              "kind": "Content",
              "text": "\n    rotation: "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyQuaternion",
              "canonicalReference": "@dcl/posix!ReadOnlyQuaternion:type"
            },
            {
              "kind": "Content",
              "text": "\n    scale: "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyVector3",
              "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
            },
            {
              "kind": "Content",
              "text": "\n    entityId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": "\n  }>\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "GizmoDragEndEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!GizmoSelectedEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GizmoSelectedEvent = "
            },
            {
              "kind": "Content",
              "text": "{\n  type: \"gizmoSelected\"\n  gizmoType: \"MOVE\" | \"ROTATE\" | \"SCALE\" | \"NONE\"\n  entities: string[]\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "GizmoSelectedEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!GlobalInputEventResult:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GlobalInputEventResult = "
            },
            {
              "kind": "Reference",
              "text": "InputEventResult",
              "canonicalReference": "@dcl/posix!InputEventResult:type"
            },
            {
              "kind": "Content",
              "text": " & {\n  type: 0 | 1\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "GlobalInputEventResult",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!IEventNames:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type IEventNames = "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "IEvents",
              "canonicalReference": "@dcl/posix!IEvents:interface"
            }
          ],
          "releaseTag": "Public",
          "name": "IEventNames",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@dcl/posix!IEvents:interface",
          "docComment": "/**\n * Note: Don't use `on` prefix for IEvents to avoid redundancy with `event.on(\"onEventName\")` syntax.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IEvents "
            }
          ],
          "releaseTag": "Public",
          "name": "IEvents",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#builderSceneStart:member",
              "docComment": "/**\n * This is triggered once the builder scene is loaded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "builderSceneStart: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "builderSceneStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#builderSceneUnloaded:member",
              "docComment": "/**\n * This is triggered once the builder scene is unloaded.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "builderSceneUnloaded: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "builderSceneUnloaded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#cameraModeChanged:member",
              "docComment": "/**\n * `cameraModeChanged` is triggered when the user changes the camera mode\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cameraModeChanged: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    cameraMode: 0 | 1 | 2\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cameraModeChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#chatMessage:member",
              "docComment": "/**\n * `chatMessage` is triggered when the user sends a message through chat entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "chatMessage: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    id: string\n    sender: string\n    message: string\n    isCommand: boolean\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chatMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#comms:member",
              "docComment": "/**\n * This event gets triggered after receiving a comms message.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "comms: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    sender: string\n    message: string\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "comms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#entitiesOutOfBoundaries:member",
              "docComment": "/**\n * After checking entities outside the fences, if any is outside, this event will be triggered with all the entities outside the scene.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entitiesOutOfBoundaries: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    entities: string[]\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entitiesOutOfBoundaries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#entityBackInScene:member",
              "docComment": "/**\n * This event gets triggered when an entity enters the scene fences.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityBackInScene: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    entityId: "
                },
                {
                  "kind": "Reference",
                  "text": "EntityID",
                  "canonicalReference": "@dcl/posix!EntityID:type"
                },
                {
                  "kind": "Content",
                  "text": "\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entityBackInScene",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#entityOutOfScene:member",
              "docComment": "/**\n * This event gets triggered when an entity leaves the scene fences.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityOutOfScene: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    entityId: "
                },
                {
                  "kind": "Reference",
                  "text": "EntityID",
                  "canonicalReference": "@dcl/posix!EntityID:type"
                },
                {
                  "kind": "Content",
                  "text": "\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "entityOutOfScene",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#externalAction:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "externalAction: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    type: string\n    [key: string]: any\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "externalAction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#gizmoEvent:member",
              "docComment": "/**\n * For gizmos\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gizmoEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "GizmoDragEndEvent",
                  "canonicalReference": "@dcl/posix!GizmoDragEndEvent:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "GizmoSelectedEvent",
                  "canonicalReference": "@dcl/posix!GizmoSelectedEvent:type"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gizmoEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#idleStateChanged:member",
              "docComment": "/**\n * `idleStateChanged` is triggered when the user not moves for a defined period of time\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "idleStateChanged: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    isIdle: boolean\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "idleStateChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#limitsExceeded:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "limitsExceeded: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    given: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, number>\n    limit: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, number>\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "limitsExceeded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#metricsUpdate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metricsUpdate: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    given: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, number>\n    limit: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, number>\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "metricsUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onAnimationEnd:member",
              "docComment": "/**\n * `onAnimationEnd` is triggered when an animation clip gets finish\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onAnimationEnd: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    clipName: string\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onAnimationEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onBlur:member",
              "docComment": "/**\n * `onBlur` is triggered when an entity loses its focus. Dispatched by the `ui-input` and `ui-password` entities when the value is changed. It triggers a callback.\n *\n * Notice: Only entities with ID will be listening for click events.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBlur: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    entityId: "
                },
                {
                  "kind": "Reference",
                  "text": "EntityID",
                  "canonicalReference": "@dcl/posix!EntityID:type"
                },
                {
                  "kind": "Content",
                  "text": "\n    pointerId: number\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onBlur",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onChange:member",
              "docComment": "/**\n * `onChange` is triggered when an entity changes its own internal state. Dispatched by the `ui-*` entities when their value is changed. It triggers a callback. Notice: Only entities with ID will be listening for click events.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChange: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    value?: any\n    pointerId?: number\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onClick:member",
              "docComment": "/**\n * The onClick event is only used for UI elements\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClick: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    entityId: "
                },
                {
                  "kind": "Reference",
                  "text": "EntityID",
                  "canonicalReference": "@dcl/posix!EntityID:type"
                },
                {
                  "kind": "Content",
                  "text": "\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onEnter:member",
              "docComment": "/**\n * `onEnter` is triggered when the user hits the \"Enter\" key from the keyboard Used principally by the Chat internal scene\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEnter: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onEnter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onEnterScene:member",
              "docComment": "/**\n * This event gets triggered when the user enters the scene\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEnterScene: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    userId: string\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onEnterScene",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onFocus:member",
              "docComment": "/**\n * `onFocus` is triggered when an entity focus is active. Dispatched by the `ui-input` and `ui-password` entities when the value is changed. It triggers a callback.\n *\n * Notice: Only entities with ID will be listening for click events.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onFocus: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    entityId: "
                },
                {
                  "kind": "Reference",
                  "text": "EntityID",
                  "canonicalReference": "@dcl/posix!EntityID:type"
                },
                {
                  "kind": "Content",
                  "text": "\n    pointerId: number\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onFocus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onLeaveScene:member",
              "docComment": "/**\n * This event gets triggered when the user leaves the scene\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onLeaveScene: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    userId: string\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onLeaveScene",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onPointerLock:member",
              "docComment": "/**\n * `onPointerLock` is triggered when the user clicks the world canvas and the pointer locks to it so the pointer moves the camera\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPointerLock: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onPointerLock",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#onTextSubmit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTextSubmit: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    text: string\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onTextSubmit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#playerExpression:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "playerExpression: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    expressionId: string\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "playerExpression",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#pointerDown:member",
              "docComment": "/**\n * `pointerDown` is triggered when the user press an input pointer. It could be a VR controller, a touch screen or the mouse.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pointerDown: "
                },
                {
                  "kind": "Reference",
                  "text": "InputEventResult",
                  "canonicalReference": "@dcl/posix!InputEventResult:type"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pointerDown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#pointerEvent:member",
              "docComment": "/**\n * `pointerEvent` is triggered when the user press or releases an input pointer. It could be a VR controller, a touch screen or the mouse.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pointerEvent: "
                },
                {
                  "kind": "Reference",
                  "text": "GlobalInputEventResult",
                  "canonicalReference": "@dcl/posix!GlobalInputEventResult:type"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pointerEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#pointerUp:member",
              "docComment": "/**\n * `pointerUp` is triggered when the user releases an input pointer. It could be a VR controller, a touch screen or the mouse.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pointerUp: "
                },
                {
                  "kind": "Reference",
                  "text": "InputEventResult",
                  "canonicalReference": "@dcl/posix!InputEventResult:type"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pointerUp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#positionChanged:member",
              "docComment": "/**\n * `positionChanged` is triggered when the position of the camera changes This event is throttled to 10 times per second.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "positionChanged: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    position: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadOnlyVector3",
                  "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
                },
                {
                  "kind": "Content",
                  "text": "\n\n    cameraPosition: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadOnlyVector3",
                  "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
                },
                {
                  "kind": "Content",
                  "text": "\n\n    playerHeight: number\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "positionChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#raycastResponse:member",
              "docComment": "/**\n * `raycastResponse` is triggered in response to a raycast query\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "raycastResponse: "
                },
                {
                  "kind": "Reference",
                  "text": "RaycastResponsePayload",
                  "canonicalReference": "@dcl/posix!RaycastResponsePayload:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "raycastResponse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#rotationChanged:member",
              "docComment": "/**\n * `rotationChanged` is triggered when the rotation of the camera changes. This event is throttled to 10 times per second.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotationChanged: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    rotation: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadOnlyVector3",
                  "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
                },
                {
                  "kind": "Content",
                  "text": "\n    quaternion: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadOnlyQuaternion",
                  "canonicalReference": "@dcl/posix!ReadOnlyQuaternion:type"
                },
                {
                  "kind": "Content",
                  "text": "\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rotationChanged",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#sceneStart:member",
              "docComment": "/**\n * This is triggered once the scene should start.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sceneStart: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sceneStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#stateEvent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stateEvent: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    type: string\n    payload: any\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "stateEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#uuidEvent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uuidEvent: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    uuid: string\n    payload: any\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "uuidEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@dcl/posix!IEvents#videoEvent:member",
              "docComment": "/**\n * This is triggered at least for each videoStatus change\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "videoEvent: "
                },
                {
                  "kind": "Content",
                  "text": "{\n    componentId: string\n    videoClipId: string\n    videoStatus: number\n    currentOffset: number\n    totalVideoLength: number\n  }"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "videoEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!InputEventResult:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type InputEventResult = "
            },
            {
              "kind": "Content",
              "text": "{\n  origin: "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyVector3",
              "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
            },
            {
              "kind": "Content",
              "text": "\n  direction: "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyVector3",
              "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
            },
            {
              "kind": "Content",
              "text": "\n  buttonId: number\n  hit?: {\n    length: number\n    hitPoint: "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyVector3",
              "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
            },
            {
              "kind": "Content",
              "text": "\n    meshName: string\n    normal: "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyVector3",
              "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
            },
            {
              "kind": "Content",
              "text": "\n    worldNormal: "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyVector3",
              "canonicalReference": "@dcl/posix!ReadOnlyVector3:type"
            },
            {
              "kind": "Content",
              "text": "\n    entityId: "
            },
            {
              "kind": "Reference",
              "text": "EntityID",
              "canonicalReference": "@dcl/posix!EntityID:type"
            },
            {
              "kind": "Content",
              "text": "\n  }\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "InputEventResult",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!MethodDescriptor:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type MethodDescriptor = "
            },
            {
              "kind": "Content",
              "text": "{ name: string }"
            }
          ],
          "releaseTag": "Public",
          "name": "MethodDescriptor",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!ModuleDescriptor:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ModuleDescriptor = "
            },
            {
              "kind": "Content",
              "text": "{\n  rpcHandle: string\n  methods: "
            },
            {
              "kind": "Reference",
              "text": "MethodDescriptor",
              "canonicalReference": "@dcl/posix!MethodDescriptor:type"
            },
            {
              "kind": "Content",
              "text": "[]\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "ModuleDescriptor",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!RaycastResponsePayload:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RaycastResponsePayload<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n  queryId: string\n  queryType: string\n  payload: T\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "RaycastResponsePayload",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!ReadOnlyQuaternion:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReadOnlyQuaternion = "
            },
            {
              "kind": "Reference",
              "text": "ReadOnlyVector4",
              "canonicalReference": "@dcl/posix!ReadOnlyVector4:type"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadOnlyQuaternion",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!ReadOnlyVector2:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReadOnlyVector2 = "
            },
            {
              "kind": "Content",
              "text": "{\n  readonly y: number\n  readonly x: number\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadOnlyVector2",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!ReadOnlyVector3:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReadOnlyVector3 = "
            },
            {
              "kind": "Content",
              "text": "{\n  readonly y: number\n  readonly x: number\n  readonly z: number\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadOnlyVector3",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@dcl/posix!ReadOnlyVector4:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ReadOnlyVector4 = "
            },
            {
              "kind": "Content",
              "text": "{\n  readonly x: number\n  readonly y: number\n  readonly z: number\n  readonly w: number\n}"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadOnlyVector4",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}
